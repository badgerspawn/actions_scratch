name: Get and cache dependencies
description: 'Get the dependencies and cache them.'
inputs:
  caching:
    description: 'Force caching'
    required: true
    default: 'true'
  codepath:
    description: 'The path to the code'
    required: false
    default: '.'
outputs:
  used-cache:
    description: 'Whether the cache was used'
    value: ${{ steps.output_info.outputs.cache }}
runs:
  using: composite
  steps:
    - name: cache dependencies
      if: inputs.caching == 'true'
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{inputs.codepath}}/node_modules
        key: ${{inputs.codepath}}-${{ hashFiles('**/package-lock.json') }}
    - name: install dependencies
      id: install
      shell: bash
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      run: |
        cd ${{inputs.codepath}}
        npm ci
    - name: Output Information
      id: output_info
      shell: bash
      run: |
        if [[ '${{ steps.cache.outputs.cache-hit }}' == 'true' && '${{ inputs.caching }}' == 'true' ]]; then
          echo "cache='true'" >> $GITHUB_OUTPUT
        else
          echo "cache='false'" >> $GITHUB_OUTPUT
        fi
